CREATE TABLE  IF NOT EXISTS films
(
    id           number(10)  GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         varchar2(100),
    description  varchar2(500),
    release_date date,
    duration     number(10),
    rating_id   number(10) NOT NULL,
    PRIMARY KEY (id)
);
CREATE TABLE  IF NOT EXISTS film_genre
(
    id       number(10)  GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id   number(10) NOT NULL,
    genre_id number(10) NOT NULL,
    PRIMARY KEY (id)
);
CREATE TABLE  IF NOT EXISTS friend
(
    id        number(10)  GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id   number(10) NOT NULL,
    friend_id number(10) NOT NULL,
    status_id number(10) NOT NULL,
    PRIMARY KEY (id)
);
CREATE TABLE  IF NOT EXISTS genre
(
    id   number(10)  GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar2(255),
    PRIMARY KEY (id)
);

CREATE TABLE  IF NOT EXISTS rating
(
    id   number(10)  GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar2(100),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS status
(
    id   number(10)  GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar2(255),
    PRIMARY KEY (id)
);
CREATE TABLE  IF NOT EXISTS users
(
    id        number(10)  GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email     varchar2(100) UNIQUE,
    login     varchar2(100) UNIQUE,
    name      varchar2(100),
    birth_day date,
    PRIMARY KEY (id)
);

CREATE TABLE  IF NOT EXISTS user_likes_film
(
    id      number(10)  GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id number(10) NOT NULL,
    user_id number(10) NOT NULL,
    PRIMARY KEY (id)
);


ALTER TABLE user_likes_film
    ADD CONSTRAINT  IF NOT EXISTS "film-users" FOREIGN KEY (film_id) REFERENCES films (id);
ALTER TABLE film_genre
    ADD CONSTRAINT  IF NOT EXISTS film_genres FOREIGN KEY (film_id) REFERENCES films (id);
ALTER TABLE films
    ADD CONSTRAINT  IF NOT EXISTS film_raiting FOREIGN KEY (rating_id) REFERENCES rating (id);
ALTER TABLE friend
    ADD CONSTRAINT  IF NOT EXISTS friend_is_user FOREIGN KEY (friend_id) REFERENCES users (id);
ALTER TABLE film_genre
    ADD CONSTRAINT  IF NOT EXISTS genre_classificator FOREIGN KEY (genre_id) REFERENCES genre (id);
ALTER TABLE friend
    ADD CONSTRAINT  IF NOT EXISTS status_classificator FOREIGN KEY (status_id) REFERENCES status (id);
ALTER TABLE user_likes_film
    ADD CONSTRAINT  IF NOT EXISTS "user-films" FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE friend
    ADD CONSTRAINT  IF NOT EXISTS user_friends FOREIGN KEY (user_id) REFERENCES users (id);